use gtk4::prelude::*;
use sourceview5::prelude::*;

use std::path::PathBuf;
use idl::{get_gui_el, get_attr};


#[unsafe(no_mangle)]
pub extern "C" fn before_showing_window(data: idl::Data) -> idl::Ret
{
    unsafe{gtk4::set_initialized();}
    Box::new(|| -> idl::Res<()> {
        get_gui_el!(data.gui.notebook).connect_page_added(move |notebook, page, _| {
            if let Err(e) = || -> idl::Res<()> {
                let scrolled_window: &gtk4::ScrolledWindow
                    = get_attr!(page.downcast_ref());
                let view = get_attr!(scrolled_window.child());
                let view: &sourceview5::View = get_attr!(view.downcast_ref());
                let buffer = view.buffer();
                let buffer: &sourceview5::Buffer = get_attr!(buffer.downcast_ref());
                buffer.set_highlight_matching_brackets(true);
                buffer.set_highlight_syntax(true);
                let tab_box = get_attr!(notebook.tab_label(page));
                let tab_box: &gtk4::Box = get_attr!(tab_box.downcast_ref());
                let tab_label = get_attr!(tab_box.first_child());
                let tab_label: &gtk4::Label = get_attr!(tab_label.downcast_ref());
                let ext = PathBuf::from(tab_label.text());
                let ext = ext.extension().unwrap_or_default();
                let lm = sourceview5::LanguageManager::new();
                buffer.set_language(language(&lm, &*ext.to_string_lossy()).as_ref());
                return Ok(());
            }() {let _ = || -> idl::Res<()> {
                idl::show_error_dialog(get_gui_el!(data.gui.window), e);
                return Ok(());
            }();}
        });
        return Ok(());
    }().err().map(|e| e.to_string()))
}


pub fn language(
    lm: &sourceview5::LanguageManager,
    ext: &str,
) -> Option<sourceview5::Language> {
    return match ext {
        "abap" => lm.language("abap"),
        "asc" | "ash" => lm.language("ags script"),
        "ampl" | "mod" => lm.language("ampl"),
        "g4" => lm.language("antlr"),
        "apib" => lm.language("api blueprint"),
        "apl" | "dyalog" => lm.language("apl"),
        "asp" | "asax" | "ascx" | "ashx" | "asmx" | "aspx" | "axd" => lm.language("asp"),
        "dats" | "hats" | "sats" => lm.language("ats"),
        "as" => lm.language("actionscript"),
        "adb" | "ada" | "ads" => lm.language("ada"),
        "agda" => lm.language("agda"),
        "als" => lm.language("alloy"),
        "apacheconf" | "vhost" => lm.language("apacheconf"),
        "cls" => lm.language("apex"),
        "applescript" | "scpt" => lm.language("applescript"),
        "arc" => lm.language("arc"),
        "ino" => lm.language("arduino"),
        "asciidoc" | "adoc" | "asc" => lm.language("asciidoc"),
        "aj" => lm.language("aspectj"),
        "asm" | "a51" | "inc" | "nasm" => lm.language("assembly"),
        "aug" => lm.language("augeas"),
        "ahk" | "ahkl" => lm.language("autohotkey"),
        "au3" => lm.language("autoit"),
        "awk" | "auk" | "gawk" | "mawk" | "nawk" => lm.language("awk"),
        "bat" | "cmd" => lm.language("batchfile"),
        "befunge" => lm.language("befunge"),
        "bison" => lm.language("bison"),
        "bb" => lm.language("bitbake"),
        "bb" | "decls" => lm.language("blitzbasic"),
        "bmx" => lm.language("blitzmax"),
        "bsv" => lm.language("bluespec"),
        "boo" => lm.language("boo"),
        "b" | "bf" => lm.language("brainfuck"),
        "brs" => lm.language("brightscript"),
        "bro" => lm.language("bro"),
        "c" | "cats" | "idc" | "w" => lm.language("c"),
        "cs" | "cake" | "cshtml" | "csx" => lm.language("cs"),
        "cpp" | "c++" | "cc" | "cp" | "cxx" | "h" | "h++" | "hh" | "hpp" | "hxx" | "inc" | "inl" | "ipp" | "tcc" | "tpp" => lm.language("cpp"),
        "c-objdump" => lm.language("c-objdump"),
        "chs" => lm.language("c2hs haskell"),
        "clp" => lm.language("clips"),
        "cmake" | "cmake.in" => lm.language("cmake"),
        "cob" | "cbl" | "ccp" | "cobol" | "cpy" => lm.language("cobol"),
        "css" => lm.language("css"),
        "csv" => lm.language("csv"),
        "capnp" => lm.language("cap'n proto"),
        "mss" => lm.language("cartocss"),
        "ceylon" => lm.language("ceylon"),
        "chpl" => lm.language("chapel"),
        "ch" => lm.language("charity"),
        "ck" => lm.language("chuck"),
        "cirru" => lm.language("cirru"),
        "clw" => lm.language("clarion"),
        "icl" | "dcl" => lm.language("clean"),
        "click" => lm.language("click"),
        "clj" | "boot" | "cl2" | "cljc" | "cljs" | "cljs.hl" | "cljscm" | "cljx" | "hic" => lm.language("clojure"),
        "coffee" | "_coffee" | "cake" | "cjsx" | "cson" | "iced" => lm.language("coffeescript"),
        "cfm" | "cfml" => lm.language("coldfusion"),
        "cfc" => lm.language("coldfusion cfc"),
        "lisp" | "asd" | "cl" | "l" | "lsp" | "ny" | "podsl" | "sexp" => lm.language("common lisp"),
        "cp" | "cps" => lm.language("component pascal"),
        "cl" => lm.language("cool"),
        "coq" | "v" => lm.language("coq"),
        "cppobjdump" | "c++-objdump" | "c++objdump" | "cpp-objdump" | "cxx-objdump" => lm.language("cpp-objdump"),
        "creole" => lm.language("creole"),
        "cr" => lm.language("crystal"),
        "feature" => lm.language("cucumber"),
        "cu" | "cuh" => lm.language("cuda"),
        "cy" => lm.language("cycript"),
        "pyx" | "pxd" | "pxi" => lm.language("cython"),
        "d" | "di" => lm.language("d"),
        "d-objdump" => lm.language("d-objdump"),
        "com" => lm.language("digital command language"),
        "dm" => lm.language("dm"),
        "zone" | "arpa" => lm.language("dns zone"),
        "d" => lm.language("dtrace"),
        "darcspatch" | "dpatch" => lm.language("darcs patch"),
        "dart" => lm.language("dart"),
        "diff" | "patch" => lm.language("diff"),
        "dockerfile" => lm.language("dockerfile"),
        "djs" => lm.language("dogescript"),
        "dylan" | "dyl" | "intr" | "lid" => lm.language("dylan"),
        "E" => lm.language("e"),
        "ecl" | "eclxml" => lm.language("ecl"),
        "ecl" => lm.language("eclipse"),
        "sch" | "brd" => lm.language("eagle"),
        "epj" => lm.language("ecere projects"),
        "e" => lm.language("eiffel"),
        "ex" | "exs" => lm.language("elixir"),
        "elm" => lm.language("elm"),
        "el" | "emacs" | "emacs.desktop" => lm.language("emacs lisp"),
        "em" | "emberscript" => lm.language("emberscript"),
        "erl" | "es" | "escript" | "hrl" | "xrl" | "yrl" => lm.language("erlang"),
        "fs" | "fsi" | "fsx" => lm.language("f#"),
        "fx" | "flux" => lm.language("flux"),
        "f90" | "f" | "f03" | "f08" | "f77" | "f95" | "for" | "fpp" => lm.language("fortran"),
        "factor" => lm.language("factor"),
        "fy" | "fancypack" => lm.language("fancy"),
        "fan" => lm.language("fantom"),
        "fs" => lm.language("filterscript"),
        "for" | "eam.fs" => lm.language("formatted"),
        "fth" | "4th" | "f" | "for" | "forth" | "fr" | "frt" | "fs" => lm.language("forth"),
        "ftl" => lm.language("freemarker"),
        "fr" => lm.language("frege"),
        "g" | "gco" | "gcode" => lm.language("g-code"),
        "gms" => lm.language("gams"),
        "g" | "gap" | "gd" | "gi" | "tst" => lm.language("gap"),
        "s" | "ms" => lm.language("gas"),
        "gd" => lm.language("gdscript"),
        "glsl" | "fp" | "frag" | "frg" | "fs" | "fsh" | "fshader" | "geo" | "geom" | "glslv" | "gshader" | "shader" | "vert" | "vrx" | "vsh" | "vshader" => lm.language("glsl"),
        "gml" => lm.language("game maker language"),
        "kid" => lm.language("genshi"),
        "ebuild" => lm.language("gentoo ebuild"),
        "eclass" => lm.language("gentoo eclass"),
        "po" | "pot" => lm.language("gettext catalog"),
        "glf" => lm.language("glyph"),
        "gp" | "gnu" | "gnuplot" | "plot" | "plt" => lm.language("gnuplot"),
        "go" => lm.language("go"),
        "golo" => lm.language("golo"),
        "gs" | "gst" | "gsx" | "vark" => lm.language("gosu"),
        "grace" => lm.language("grace"),
        "gradle" => lm.language("gradle"),
        "gf" => lm.language("grammatical framework"),
        "gml" => lm.language("graph modeling language"),
        "graphql" => lm.language("graphql"),
        "dot" | "gv" => lm.language("graphviz (dot)"),
        "man" | "1" | "1in" | "1m" | "1x" | "2" | "3" | "3in" | "3m" | "3qt" | "3x" | "4" | "5" | "6" | "7" | "8" | "9" | "l" | "me" | "ms" | "n" | "rno" | "roff" => lm.language("groff"),
        "groovy" | "grt" | "gtpl" | "gvy" => lm.language("groovy"),
        "gsp" => lm.language("groovy server pages"),
        "hcl" | "tf" => lm.language("hcl"),
        "hlsl" | "fx" | "fxh" | "hlsli" => lm.language("hlsl"),
        "html" | "htm" | "html.hl" | "inc" | "st" | "xht" | "xhtml" => lm.language("html"),
        "mustache" | "jinja" => lm.language("html+django"),
        "eex" => lm.language("html+eex"),
        "erb" | "erb.deface" => lm.language("html+erb"),
        "phtml" => lm.language("html+php"),
        "http" => lm.language("http"),
        "hh" => lm.language("hack"),
        "haml" | "haml.deface" => lm.language("haml"),
        "handlebars" | "hbs" => lm.language("handlebars"),
        "hb" => lm.language("harbour"),
        "hs" | "hsc" => lm.language("haskell"),
        "hx" | "hxsl" => lm.language("haxe"),
        "hy" => lm.language("hy"),
        "bf" => lm.language("hyphy"),
        "pro" | "dlm" => lm.language("idl"),
        "ipf" => lm.language("igor pro"),
        "ini" | "cfg" | "prefs" | "pro" | "properties" => lm.language("ini"),
        "irclog" | "weechatlog" => lm.language("irc log"),
        "idr" | "lidr" => lm.language("idris"),
        "ni" | "i7x" => lm.language("inform 7"),
        "iss" => lm.language("inno setup"),
        "io" => lm.language("io"),
        "ik" => lm.language("ioke"),
        "thy" => lm.language("isabelle"),
        "ijs" => lm.language("j"),
        "flex" | "jflex" => lm.language("jflex"),
        "json" | "geojson" | "lock" | "topojson" => lm.language("json"),
        "json5" => lm.language("json5"),
        "jsonld" => lm.language("jsonld"),
        "jq" => lm.language("jsoniq"),
        "jsx" => lm.language("jsx"),
        "jade" => lm.language("jade"),
        "j" => lm.language("jasmin"),
        "java" => lm.language("java"),
        "jsp" => lm.language("java server pages"),
        "js" | "_js" | "bones" | "es" | "es6" | "frag" | "gs" | "jake" | "jsb" | "jscad" | "jsfl" | "jsm" | "jss" | "njs" | "pac" | "sjs" | "ssjs" | "sublime-build" | "sublime-commands" | "sublime-completions" | "sublime-keymap" | "sublime-macro" | "sublime-menu" | "sublime-mousemap" | "sublime-project" | "sublime-settings" | "sublime-theme" | "sublime-workspace" | "sublime_metrics" | "sublime_session" | "xsjs" | "xsjslib" => lm.language("javascript"),
        "jl" => lm.language("julia"),
        "ipynb" => lm.language("jupyter notebook"),
        "krl" => lm.language("krl"),
        "sch" | "brd" | "kicad_pcb" => lm.language("kicad"),
        "kit" => lm.language("kit"),
        "kt" | "ktm" | "kts" => lm.language("kotlin"),
        "lfe" => lm.language("lfe"),
        "ll" => lm.language("llvm"),
        "lol" => lm.language("lolcode"),
        "lsl" | "lslp" => lm.language("lsl"),
        "lvproj" => lm.language("labview"),
        "lasso" | "las" | "lasso8" | "lasso9" | "ldml" => lm.language("lasso"),
        "latte" => lm.language("latte"),
        "lean" | "hlean" => lm.language("lean"),
        "less" => lm.language("less"),
        "l" | "lex" => lm.language("lex"),
        "ly" | "ily" => lm.language("lilypond"),
        "b" | "m" => lm.language("limbo"),
        "ld" | "lds" => lm.language("linker script"),
        "mod" => lm.language("linux kernel module"),
        "liquid" => lm.language("liquid"),
        "lagda" => lm.language("literate agda"),
        "litcoffee" => lm.language("literate coffeescript"),
        "lhs" => lm.language("literate haskell"),
        "ls" | "_ls" => lm.language("livescript"),
        "xm" | "x" | "xi" => lm.language("logos"),
        "lgt" | "logtalk" => lm.language("logtalk"),
        "lookml" => lm.language("lookml"),
        "ls" => lm.language("loomscript"),
        "lua" | "fcgi" | "nse" | "pd_lua" | "rbxs" | "wlua" => lm.language("lua"),
        "mumps" | "m" => lm.language("m"),
        "m4" => lm.language("m4"),
        "m4" => lm.language("m4sugar"),
        "ms" | "mcr" => lm.language("maxscript"),
        "mtml" => lm.language("mtml"),
        "muf" | "m" => lm.language("muf"),
        "mak" | "d" | "mk" | "mkfile" => lm.language("makefile"),
        "mako" | "mao" => lm.language("mako"),
        "md" | "markdown" | "mkd" | "mkdn" | "mkdown" | "ron" => lm.language("markdown"),
        "mask" => lm.language("mask"),
        "mathematica" | "cdf" | "m" | "ma" | "mt" | "nb" | "nbp" | "wl" | "wlt" => lm.language("mathematica"),
        "matlab" | "m" => lm.language("matlab"),
        "maxpat" | "maxhelp" | "maxproj" | "mxt" | "pat" => lm.language("max"),
        "mediawiki" | "wiki" => lm.language("mediawiki"),
        "m" | "moo" => lm.language("mercury"),
        "metal" => lm.language("metal"),
        "minid" => lm.language("minid"),
        "druby" | "duby" | "mir" | "mirah" => lm.language("mirah"),
        "mo" => lm.language("modelica"),
        "mod" => lm.language("modula-2"),
        "mms" | "mmk" => lm.language("module management system"),
        "monkey" => lm.language("monkey"),
        "moo" => lm.language("moocode"),
        "moon" => lm.language("moonscript"),
        "myt" => lm.language("myghty"),
        "ncl" => lm.language("ncl"),
        "nl" => lm.language("nl"),
        "nsi" | "nsh" => lm.language("nsis"),
        "n" => lm.language("nemerle"),
        "axs" | "axi" => lm.language("netlinx"),
        "axs.erb" | "axi.erb" => lm.language("netlinx+erb"),
        "nlogo" => lm.language("netlogo"),
        "nl" | "lisp" | "lsp" => lm.language("newlisp"),
        "nginxconf" | "vhost" => lm.language("nginx"),
        "nim" | "nimrod" => lm.language("nimrod"),
        "ninja" => lm.language("ninja"),
        "nit" => lm.language("nit"),
        "nix" => lm.language("nix"),
        "nu" => lm.language("nu"),
        "numpy" | "numpyw" | "numsc" => lm.language("numpy"),
        "ml" | "eliom" | "eliomi" | "ml4" | "mli" | "mll" | "mly" => lm.language("ocaml"),
        "objdump" => lm.language("objdump"),
        "m" | "h" => lm.language("objective-c"),
        "mm" => lm.language("objective-c++"),
        "j" | "sj" => lm.language("objective-j"),
        "omgrofl" => lm.language("omgrofl"),
        "opa" => lm.language("opa"),
        "opal" => lm.language("opal"),
        "cl" | "opencl" => lm.language("opencl"),
        "p" | "cls" => lm.language("openedge abl"),
        "scad" => lm.language("openscad"),
        "org" => lm.language("org"),
        "ox" | "oxh" | "oxo" => lm.language("ox"),
        "oxygene" => lm.language("oxygene"),
        "oz" => lm.language("oz"),
        "pwn" | "inc" => lm.language("pawn"),
        "php" | "aw" | "ctp" | "fcgi" | "inc" | "php3" | "php4" | "php5" | "phps" | "phpt" => lm.language("php"),
        "pls" | "pck" | "pkb" | "pks" | "plb" | "plsql" => lm.language("plsql"),
        "pov" | "inc" => lm.language("pov-ray sdl"),
        "pan" => lm.language("pan"),
        "psc" => lm.language("papyrus"),
        "parrot" => lm.language("parrot"),
        "pasm" => lm.language("parrot assembly"),
        "pir" => lm.language("parrot internal representation"),
        "pas" | "dfm" | "dpr" | "inc" | "lpr" | "pp" => lm.language("pascal"),
        "pl" | "al" | "cgi" | "fcgi" | "perl" | "ph" | "plx" | "pm" | "pod" | "psgi" | "t" => lm.language("perl"),
        "6pl" | "6pm" | "nqp" | "p6" | "p6l" | "p6m" | "pl" | "pl6" | "pm" | "pm6" | "t" => lm.language("perl6"),
        "pkl" => lm.language("pickle"),
        "l" => lm.language("picolisp"),
        "pig" => lm.language("piglatin"),
        "pike" | "pmod" => lm.language("pike"),
        "pod" => lm.language("pod"),
        "pogo" => lm.language("pogoscript"),
        "pony" => lm.language("pony"),
        "ps" | "eps" => lm.language("postscript"),
        "ps1" | "psd1" | "psm1" => lm.language("powershell"),
        "pde" => lm.language("processing"),
        "pl" | "pro" | "prolog" | "yap" => lm.language("prolog"),
        "spin" => lm.language("propeller spin"),
        "proto" => lm.language("protocol buffer"),
        "asc" | "pub" => lm.language("public key"),
        "pp" => lm.language("puppet"),
        "pd" => lm.language("pure data"),
        "pb" | "pbi" => lm.language("purebasic"),
        "purs" => lm.language("purescript"),
        "py" | "bzl" | "cgi" | "fcgi" | "gyp" | "lmi" | "pyde" | "pyp" | "pyt" | "pyw" | "rpy" | "tac" | "wsgi" | "xpy" => lm.language("python3"),
        "pytb" => lm.language("python traceback"),
        "qml" | "qbs" => lm.language("qml"),
        "pro" | "pri" => lm.language("qmake"),
        "r" | "rd" | "rsx" => lm.language("r"),
        "raml" => lm.language("raml"),
        "rdoc" => lm.language("rdoc"),
        "rbbas" | "rbfrm" | "rbmnu" | "rbres" | "rbtbar" | "rbuistate" => lm.language("realbasic"),
        "rhtml" => lm.language("rhtml"),
        "rmd" => lm.language("rmarkdown"),
        "rkt" | "rktd" | "rktl" | "scrbl" => lm.language("racket"),
        "rl" => lm.language("ragel in ruby host"),
        "raw" => lm.language("raw token data"),
        "reb" | "r" | "r2" | "r3" | "rebol" => lm.language("rebol"),
        "red" | "reds" => lm.language("red"),
        "cw" => lm.language("redcode"),
        "rpy" => lm.language("ren'py"),
        "rsh" => lm.language("renderscript"),
        "robot" => lm.language("robotframework"),
        "rg" => lm.language("rouge"),
        "rb" | "builder" | "fcgi" | "gemspec" | "god" | "irbrc" | "jbuilder" | "mspec" | "pluginspec" | "podspec" | "rabl" | "rake" | "rbuild" | "rbw" | "rbx" | "ru" | "ruby" | "thor" | "watchr" => lm.language("ruby"),
        "rs" | "rs.in" => lm.language("rust"),
        "sas" => lm.language("sas"),
        "scss" => lm.language("scss"),
        "smt2" | "smt" => lm.language("smt"),
        "sparql" | "rq" => lm.language("sparql"),
        "sqf" | "hqf" => lm.language("sqf"),
        "sql" | "cql" | "ddl" | "inc" | "prc" | "tab" | "udf" | "viw" => lm.language("sql"),
        "db2" => lm.language("sqlpl"),
        "ston" => lm.language("ston"),
        "svg" => lm.language("svg"),
        "sage" | "sagews" => lm.language("sage"),
        "sls" => lm.language("saltstack"),
        "sass" => lm.language("sass"),
        "scala" | "sbt" | "sc" => lm.language("scala"),
        "scaml" => lm.language("scaml"),
        "scm" | "sld" | "sls" | "sps" | "ss" => lm.language("scheme"),
        "sci" | "sce" | "tst" => lm.language("scilab"),
        "self" => lm.language("self"),
        "sh" | "bash" | "bats" | "cgi" | "command" | "fcgi" | "ksh" | "sh.in" | "tmux" | "tool" | "zsh" => lm.language("shell"),
        "sh-session" => lm.language("shellsession"),
        "shen" => lm.language("shen"),
        "sl" => lm.language("slash"),
        "slim" => lm.language("slim"),
        "smali" => lm.language("smali"),
        "st" | "cs" => lm.language("smalltalk"),
        "tpl" => lm.language("smarty"),
        "sp" | "inc" | "sma" => lm.language("sourcepawn"),
        "nut" => lm.language("squirrel"),
        "stan" => lm.language("stan"),
        "ML" | "fun" | "sig" | "sml" => lm.language("standard ml"),
        "do" | "ado" | "doh" | "ihlp" | "mata" | "matah" | "sthlp" => lm.language("stata"),
        "styl" => lm.language("stylus"),
        "sc" | "scd" => lm.language("supercollider"),
        "swift" => lm.language("swift"),
        "sv" | "svh" | "vh" => lm.language("systemverilog"),
        "toml" => lm.language("toml"),
        "txl" => lm.language("txl"),
        "tcl" | "adp" | "tm" => lm.language("tcl"),
        "tcsh" | "csh" => lm.language("tcsh"),
        "tex" | "aux" | "bbx" | "bib" | "cbx" | "cls" | "dtx" | "ins" | "lbx" | "ltx" | "mkii" | "mkiv" | "mkvi" | "sty" | "toc" => lm.language("tex"),
        "tea" => lm.language("tea"),
        "t" => lm.language("terra"),
        "txt" | "fr" | "nb" | "ncl" | "no" => lm.language("text"),
        "textile" => lm.language("textile"),
        "thrift" => lm.language("thrift"),
        "t" | "tu" => lm.language("turing"),
        "ttl" => lm.language("turtle"),
        "twig" => lm.language("twig"),
        "ts" | "tsx" => lm.language("typescript"),
        "upc" => lm.language("unified parallel c"),
        "anim" | "asset" | "mat" | "meta" | "prefab" | "unity" => lm.language("unity3d asset"),
        "uno" => lm.language("uno"),
        "uc" => lm.language("unrealscript"),
        "ur" | "urs" => lm.language("urweb"),
        "vcl" => lm.language("vcl"),
        "vhdl" | "vhd" | "vhf" | "vhi" | "vho" | "vhs" | "vht" | "vhw" => lm.language("vhdl"),
        "vala" | "vapi" => lm.language("vala"),
        "v" | "veo" => lm.language("verilog"),
        "vim" => lm.language("viml"),
        "vb" | "bas" | "cls" | "frm" | "frx" | "vba" | "vbhtml" | "vbs" => lm.language("visual basic"),
        "volt" => lm.language("volt"),
        "vue" => lm.language("vue"),
        "owl" => lm.language("web ontology language"),
        "webidl" => lm.language("webidl"),
        "x10" => lm.language("x10"),
        "xc" => lm.language("xc"),
        "xml" | "ant" | "axml" | "ccxml" | "clixml" | "cproject" | "csl" | "csproj" | "ct" | "dita" | "ditamap" | "ditaval" | "dll.config" | "dotsettings" | "filters" | "fsproj" | "fxml" | "glade" | "gml" | "grxml" | "iml" | "ivy" | "jelly" | "jsproj" | "kml" | "launch" | "mdpolicy" | "mm" | "mod" | "mxml" | "nproj" | "nuspec" | "odd" | "osm" | "plist" | "pluginspec" | "props" | "ps1xml" | "psc1" | "pt" | "rdf" | "rss" | "scxml" | "srdf" | "storyboard" | "stTheme" | "sublime-snippet" | "targets" | "tmCommand" | "tml" | "tmLanguage" | "tmPreferences" | "tmSnippet" | "tmTheme" | "ts" | "tsx" | "ui" | "urdf" | "ux" | "vbproj" | "vcxproj" | "vssettings" | "vxml" | "wsdl" | "wsf" | "wxi" | "wxl" | "wxs" | "x3d" | "xacro" | "xaml" | "xib" | "xlf" | "xliff" | "xmi" | "xml.dist" | "xproj" | "xsd" | "xul" | "zcml" => lm.language("xml"),
        "xsp-config" | "xsp.metadata" => lm.language("xpages"),
        "xpl" | "xproc" => lm.language("xproc"),
        "xquery" | "xq" | "xql" | "xqm" | "xqy" => lm.language("xquery"),
        "xs" => lm.language("xs"),
        "xslt" | "xsl" => lm.language("xslt"),
        "xojo_code" | "xojo_menu" | "xojo_report" | "xojo_script" | "xojo_toolbar" | "xojo_window" => lm.language("xojo"),
        "xtend" => lm.language("xtend"),
        "yml" | "reek" | "rviz" | "sublime-syntax" | "syntax" | "yaml" | "yaml-tmlanguage" => lm.language("yaml"),
        "yang" => lm.language("yang"),
        "y" | "yacc" | "yy" => lm.language("yacc"),
        "zep" => lm.language("zephir"),
        "zimpl" | "zmpl" | "zpl" => lm.language("zimpl"),
        "desktop" | "desktop.in" => lm.language("desktop"),
        "ec" | "eh" => lm.language("ec"),
        "edn" => lm.language("edn"),
        "fish" => lm.language("fish"),
        "mu" => lm.language("mupad"),
        "nc" => lm.language("nesc"),
        "ooc" => lm.language("ooc"),
        "rst" | "rest" | "rest.txt" | "rst.txt" => lm.language("restructuredtext"),
        "wisp" => lm.language("wisp"),
        "prg" | "ch" | "prw" => lm.language("xbase"),
        _ => None,
    };
}
